{"version":3,"sources":["contexts/ProductsContext.ts","components/Header/Header.tsx","helpers/getSearchWith.ts","components/Loader/Loader.tsx","App.tsx","api/api.ts","index.tsx"],"names":["ProductContext","createContext","visibleProducts","getProduct","Header","useSearchParams","searchParams","setSearchParams","query","get","className","Navbar","bg","variant","Container","Brand","href","InputGroup","Form","Control","placeholder","aria-label","aria-describedby","value","onChange","e","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","delete","Array","isArray","part","append","set","getSearchWith","target","Loader","Home","lazy","ProductDetail","App","useState","products","setProducts","deferredName","useDeferredValue","useMemo","reg","RegExp","filter","product","name","search","useEffect","fetch","then","res","json","Provider","id","find","currProduct","fallback","path","element","index","to","replace","createRoot","document","getElementById","render"],"mappings":"qJAAA,6CAQaA,EAAiBC,wBAAuB,CACnDC,gBAAiB,GACjBC,WAAY,kBAAM,S,kMCiCLC,EAhCA,WACb,MAAwCC,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAAY,GAQ3C,OACE,wBAAQC,UAAU,SAAlB,SACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,mBAGA,cAACC,EAAA,EAAD,CAAYP,UAAU,iBAAtB,SACE,cAACQ,EAAA,EAAKC,QAAN,CACEC,YAAY,sBACZC,aAAW,uBACXC,mBAAiB,eACjBC,MAAOf,EACPgB,SAnBW,SAACC,GACtBlB,ECZG,SACLmB,EACAC,GAEA,IAAMC,EAAY,IAAIC,gBACpBH,EAAcI,YAkBhB,OAfAC,OAAOC,QAAQL,GACZM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXX,EAAW,KACX,OAAVA,EACFK,EAAUO,OAAOD,GACRE,MAAMC,QAAQd,IACvBK,EAAUO,OAAOD,GAEjBX,EAAMU,SAAQ,SAAAK,GACZV,EAAUW,OAAOL,EAAKI,OAGxBV,EAAUY,IAAIN,EAAKX,MAIlBK,EAAUE,WDVbW,CAAcnC,EAAc,CAAEE,MAAOiB,EAAEiB,OAAOnB,OAAS,qB,QEX9CoB,G,MAJA,kBACb,qBAAKjC,UAAU,4BCeXkC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAgBD,gBAAK,kBAAM,gCAgDlBE,EA9CO,WACpB,MAAgCC,mBAAwB,IAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAuB7C,cACjBG,EADN,oBAC2BC,IAAI,SACzB0C,EAAeC,2BAAiB5C,GAChCN,EAAkBmD,mBAAQ,WAC9B,IAAKF,EACH,OAAOF,EAGT,IAAMK,EAAM,IAAIC,OAAJ,UAAcJ,EAAd,OAAiC,KAE7C,OAAOF,EAASO,QAAO,SAAAC,GACrB,OAAqC,IAA9BA,EAAQC,KAAKC,OAAOL,QAE5B,CAACH,EAAcF,IAElBW,qBAAU,WCnCHC,MAHO,mBAIXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UDoCdF,MAAK,SAAAC,GAAG,OAAIb,EAAYa,QAC1B,IAMH,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAeE,SAAhB,CAAyB1C,MAAO,CAAErB,kBAAiBC,WAPpC,SAAC+D,GAClB,OAAOjB,EAASkB,MAAK,SAAAC,GAAW,OAAIA,EAAYF,KAAOA,MAAO,OAM5D,SACE,cAAC,WAAD,CAAUG,SAAU,cAAC,EAAD,IAApB,SACE,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC3B,EAAD,MACzB,eAAC,IAAD,CAAO0B,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,IAAD,CAAUE,GAAG,IAAIC,SAAO,MAC9C,cAAC,IAAD,CAAOJ,KAAK,MAAMC,QAAS,cAACzB,EAAD,sB,MEnD9B6B,qBAAWC,SAASC,eAAe,SAE3CC,OACH,cAAC,IAAD,UACE,cAAC,EAAD,S","file":"static/js/main.7a8f6f4a.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { Product } from '../types/Product';\n\ntype Context = {\n  visibleProducts: Product[];\n  getProduct: (id: number) => Product | null;\n};\n\nexport const ProductContext = createContext<Context>({\n  visibleProducts: [],\n  getProduct: () => null,\n});\n","import { ChangeEvent } from 'react';\nimport './Header.scss';\nimport {\n  Container,\n  Navbar,\n  Form,\n  InputGroup,\n} from 'react-bootstrap';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helpers/getSearchWith';\n\nconst Header = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const onChangeHandle = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, { query: e.target.value || null }),\n    );\n  };\n\n  return (\n    <header className=\"header\">\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"/\">\n            TUNEL\n          </Navbar.Brand>\n          <InputGroup className=\"header__search\">\n            <Form.Control\n              placeholder=\"Szukaj produktÃ³w\"\n              aria-label=\"Recipient's username\"\n              aria-describedby=\"basic-addon2\"\n              value={query}\n              onChange={onChangeHandle}\n            />\n          </InputGroup>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import './Loader.scss';\n\nconst Loader = () => (\n  <div className=\"lds-hourglass spinner\" />\n);\n\nexport default Loader;\n","import {\n  Suspense,\n  lazy,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Routes, Route, Navigate } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getProducts } from './api/api';\n\nimport { Product as ProductType } from './types/Product';\nimport Header from './components/Header/Header';\nimport { ProductContext } from './contexts/ProductsContext';\nimport Loader from './components/Loader/Loader';\n\nconst Home = lazy(() => import('./pages/Home/Home'));\nconst ProductDetail = lazy(() => import('./pages/ProductDetail/ProductDetail'));\n\nconst App: React.FC = () => {\n  const [products, setProducts] = useState<ProductType[]>([]);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const deferredName = useDeferredValue(query);\n  const visibleProducts = useMemo(() => {\n    if (!deferredName) {\n      return products;\n    }\n\n    const reg = new RegExp(`${deferredName}.+$`, 'i');\n\n    return products.filter(product => {\n      return product.name.search(reg) !== -1;\n    });\n  }, [deferredName, products]);\n\n  useEffect(() => {\n    getProducts()\n      .then(res => setProducts(res));\n  }, []);\n\n  const getProduct = (id: number) => {\n    return products.find(currProduct => currProduct.id === id) || null;\n  };\n\n  return (\n    <>\n      <Header />\n      <ProductContext.Provider value={{ visibleProducts, getProduct }}>\n        <Suspense fallback={<Loader />}>\n          <main>\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/home\">\n                <Route index element={<Navigate to=\"/\" replace />} />\n                <Route path=\":id\" element={<ProductDetail />} />\n              </Route>\n            </Routes>\n          </main>\n        </Suspense>\n      </ProductContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","const API_URL = './products.json';\n\nexport const getProducts = () => {\n  return fetch(API_URL)\n    .then(res => res.json());\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport './styles/index.scss';\n\nconst root = createRoot(document.getElementById('root') as HTMLElement);\n\nroot.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n);\n"],"sourceRoot":""}