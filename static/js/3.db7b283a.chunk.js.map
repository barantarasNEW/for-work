{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","components/Back/Back.tsx","components/Product/Product.tsx","pages/ProductDetail/ProductDetail.tsx"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Back","to","Product","product","name","img","recipe","Container","style","width","src","alt","map","ProductDetail","getProduct","useContext","ProductContext","id","useParams","useState","setProduct","useEffect","foundProduct"],"mappings":"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","file":"static/js/3.db7b283a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import './Back.scss';\nimport { Link } from 'react-router-dom';\n\nconst Back = () => {\n  return (\n    <Link to=\"/\" className=\"btn btn-danger back\">Back</Link>\n  );\n};\n\nexport default Back;\n","import {\n  Container,\n  Card,\n} from 'react-bootstrap';\nimport './Product.scss';\nimport { Product as ProductType } from '../../types/Product';\nimport Back from '../Back/Back';\n\ntype Props = {\n  product: ProductType;\n};\n\nconst Product: React.FC<Props> = ({ product: { name, img, recipe } }) => {\n  return (\n    <section className=\"product\">\n      <Container>\n        <Back />\n\n        <Card\n          className=\"product__card\"\n          style={{ width: '18rem' }}\n        >\n          <Card.Img\n            className=\"product__img\"\n            variant=\"top\"\n            src={img}\n            alt=\"product\"\n          />\n          <Card.Body>\n            <Card.Title className=\"product__name\">{name}</Card.Title>\n            <div className=\"product__recipe\">\n              {recipe.map(value => (\n                <Card.Text key={value} className=\"product__recipe__value\">\n                  {value}\n                </Card.Text>\n              ))}\n            </div>\n          </Card.Body>\n        </Card>\n      </Container>\n    </section>\n  );\n};\n\nexport default Product;\n","import { useParams } from 'react-router';\nimport { useContext, useEffect, useState } from 'react';\nimport Product from '../../components/Product/Product';\nimport { Product as ProductType } from '../../types/Product';\nimport { ProductContext } from '../../contexts/ProductsContext';\n\nconst ProductDetail = () => {\n  const { getProduct } = useContext(ProductContext);\n  const { id } = useParams();\n  const [product, setProduct] = useState<ProductType | null>(null);\n\n  useEffect(() => {\n    if (id) {\n      const foundProduct = getProduct(+id);\n\n      setProduct(foundProduct);\n    }\n  }, [id, getProduct]);\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <Product product={product} />\n  );\n};\n\nexport default ProductDetail;\n"],"sourceRoot":""}